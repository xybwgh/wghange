git config --global user.name "用户名"
git config --global user.email "邮箱名"
1.pwd:显示用户当前所处的路径
2.ls：显示当前文件夹下的内容
3.rm -rf（要删除的内容）：删除文件或文件夹
4.cd （d:）:改变路径
5.mkdir （要添加的内容）：新建文件夹
6.git init：初始化仓库（告诉git在哪安家）
7.git add 文件名：将文件添加到仓库
8.git commit -m "...."（message——说明）:将文件提交给仓库
9.git status:对比改之前与改之后的文件
10.git diff 文件名：查看文件更改的地方
11.git log 或者git log --pretty=oneline -- 文件名:查看用户修改信息的目录
12.git reset --hard (备注前的16进制里的前几个（强制加6位））:返回到我所选择的版本
13.cat 文件名：显示文件内容
14.git reset --hard HEAD^(^是几次的意思，head指向那个版本号，当前版本就是head指向的)：回退到^次操作的版本，无法返回到原来版本。（相当于指针）
15.git reflog：展示命令穿梭过程
16.touch 文件名：添加文件
17.vi 文件名：（一般模式：双击d：删除光标所在行，x:删除单个字符，u：撤销删除；插入模式：按i开始填写内容；命令模式：:wq或者:x 保存退出）
18.git分区：工作区，暂存区，支线库。commit只是暂存区的内容，如果工作区没有add，那么工作区的改变就不会commit
19.当维护多个不重名的文件时，git的这些所有命令都可以指定文件名：
     （1）git diff HEAD -- 文件名：只比较版本库中该文件和工作区该文件的区别，忽略别的文件的比较
20.git checkout -- note.txt:还原仓库中的head（慎用）
21.git reset HEAD -- note.txt：放弃暂存区的内容（通过git add添加的），同时把工作区的内容还原到HEAD状态